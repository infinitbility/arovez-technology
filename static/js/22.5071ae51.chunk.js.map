{"version":3,"sources":["Demo/UIElements/Basic/Button.js","App/components/MainCard.js","App/components/UcFirst.js"],"names":["BasicButton","buttonVariants","buttonOptions","variant","icon","basicButtons","map","idx","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","key","overlay","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","_App_components_UcFirst__WEBPACK_IMPORTED_MODULE_17__","text","outlineButtons","squareButtons","className","basicDropdownButton","button","title","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","id","concat","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","Item","eventKey","splitDropdownButton","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","Divider","_hoc_Aux__WEBPACK_IMPORTED_MODULE_15__","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","react_bootstrap__WEBPACK_IMPORTED_MODULE_13__","_App_components_MainCard__WEBPACK_IMPORTED_MODULE_16__","react_bootstrap__WEBPACK_IMPORTED_MODULE_14__","React","Component","MainCard","state","isOption","_this","props","fullCard","collapseCard","loadCard","loading","cardRemove","loadFunction","loadingFunction","cardReloadHandler","setState","setInterval","cardRemoveHandler","this","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","_this2","cardClass","react__WEBPACK_IMPORTED_MODULE_6___default","alignRight","Toggle","Menu","as","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","Object","C_Users_User_Documents_arovez_technology_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","_hoc_Aux__WEBPACK_IMPORTED_MODULE_11__","windowSize","UcFirst","string","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/22.5071ae51.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    ButtonToolbar,\r\n    Dropdown,\r\n    DropdownButton,\r\n    SplitButton\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../App/components/MainCard\";\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\n\r\nclass BasicButton extends React.Component {\r\n    render() {\r\n        const buttonVariants = [\r\n            'primary',\r\n            'secondary',\r\n            'success',\r\n            'danger',\r\n            'warning',\r\n            'info',\r\n            'light',\r\n            'dark',\r\n        ];\r\n\r\n        const buttonOptions = [\r\n            {variant: 'primary', icon:'feather icon-thumbs-up'},\r\n            {variant: 'secondary', icon:'feather icon-camera'},\r\n            {variant: 'success', icon:'feather icon-check-circle'},\r\n            {variant: 'danger', icon:'feather icon-slash'},\r\n            {variant: 'warning', icon:'feather icon-alert-triangle'},\r\n            {variant: 'info', icon:'feather icon-info'}\r\n        ];\r\n\r\n        const basicButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\r\n                <Button variant={variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const outlineButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-'+variant}</Tooltip>}>\r\n                <Button variant={'outline-'+variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const squareButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-square' variant={variant}><UcFirst text={variant} /></Button>);\r\n\r\n\r\n        const basicDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n        const splitDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <SplitButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-split-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className=\"mr-2 mb-2\"\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </SplitButton>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Default\">\r\n                            <p>use <code>variant=\"*\"</code> props in component <code>Button</code> to get various button</p>\r\n                            {basicButtons}\r\n                            <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\r\n                                <Button variant=\"link\">Link</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                        <Card title=\"Outline\">\r\n                            <p>use <code>variant=\"outline-*\"</code> props in component <code>Button</code> to get various outline button</p>\r\n                            {outlineButtons}\r\n                        </Card>\r\n                        <Card title=\"Square Button\">\r\n                            <p>use <code>className=\"btn-square\"</code> props in component <code>Button</code> to get square button</p>\r\n                            {squareButtons}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Basic Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicButton;\r\n","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: this.props.loading,\r\n        cardRemove: false,\r\n        loadFunction: this.props.loadingFunction,\r\n    };\r\n\r\n    componentWillReceiveProps(props){\r\n        this.setState({loadCard: props.loading});\r\n    }\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.state.loadFunction}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            {/* <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item> */}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;"],"sourceRoot":""}