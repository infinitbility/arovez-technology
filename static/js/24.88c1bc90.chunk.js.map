{"version":3,"sources":["Pages/Dashboard/AccountCredentials.js","App/components/UcFirst.js"],"names":["AccountCredentials","props","_this","Object","C_Users_User_Documents_arovez_technology_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_User_Documents_arovez_technology_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_User_Documents_arovez_technology_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleAccountBoard","apiUrl","config","baseurl","fetch","then","response","json","data","setState","users","loading","handleCreateAccount","flag","name","state","userName","password","userNameError","userNameMessage","nameError","passwordError","modal","$accountDetails","account","username","base_url","status","requestOptions","method","headers","Accept","Content-Type","body","JSON","stringify","job_board","console","log","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_hoc_Aux__WEBPACK_IMPORTED_MODULE_14__","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","Header","md","Title","as","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","onClick","variant","_App_components_UcFirst__WEBPACK_IMPORTED_MODULE_15__","text","Body","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","responsive","map","user","index","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","size","show","onHide","aria-labelledby","closeButton","id","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","Group","controlId","Label","Control","required","type","placeholder","onChange","e","target","value","Text","disabled","React","Component","UcFirst","string","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/24.88c1bc90.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Form, ListGroup, Button, Table, Dropdown, Modal } from 'react-bootstrap';\r\nimport config from '../../config';\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport UcFirst from \"../../App/components/UcFirst\";\r\n\r\nclass AccountCredentials extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { users: [], loading: true, modal: false, name: null, nameError: false, userName: null, userNameError: false, userNameMessage: '', password: null, passwordError: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleAccountBoard();\r\n    }\r\n\r\n    handleAccountBoard = () => {\r\n        let apiUrl = config.baseurl + 'job_boards';\r\n        fetch(apiUrl)\r\n            .then((response) => response.json())\r\n            .then((data) => this.setState({ users: data, loading: false }));\r\n    }\r\n\r\n    handleCreateAccount = () => {\r\n        let flag = true;\r\n        let name = this.state.name;\r\n        let userName = this.state.userName;\r\n        let password = this.state.password;\r\n        let account = \"praktikum\";\r\n        let baseurl = \"https://www.praktikum.info\";\r\n        let status = \"ACTIVE\";\r\n        let emailValidation = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n        let users = this.state.users;\r\n\r\n\r\n        if(userName == '' || userName == null){\r\n            flag = false;\r\n            this.setState({userNameError: true, userNameMessage: 'Please enter your email.'});\r\n        }else{\r\n            flag = true;\r\n            this.setState({userNameError: false, userNameMessage: ''});\r\n        }\r\n\r\n        // if(emailValidation.test(userName)){\r\n        //     flag = true;\r\n        //     this.setState({userNameError: false, userNameMessage: ''});\r\n        // }else{\r\n        //     flag = false;\r\n        //     this.setState({userNameError: true, userNameMessage: 'Please enter your email valid format.'});\r\n        // }\r\n\r\n        if(name == '' || name == null){\r\n            flag = false;\r\n            this.setState({nameError: true});\r\n        }else{\r\n            flag = true;\r\n            this.setState({nameError: false});\r\n        }\r\n\r\n\r\n        if(password == '' || password == null){\r\n            flag = false;\r\n            this.setState({passwordError: true});\r\n        }else{\r\n            flag = true;\r\n            this.setState({passwordError: false});\r\n        }\r\n\r\n        if(flag == true){\r\n            this.setState({ modal: false });\r\n\r\n            let $accountDetails = {\r\n                name: name,\r\n                account: account,\r\n                username: userName,\r\n                password: password,\r\n                base_url: baseurl,\r\n                status: status\r\n            };\r\n\r\n            let apiUrl = config.baseurl + 'job_boards';\r\n\r\n            let requestOptions = {\r\n                method: 'POST',\r\n                headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ job_board: $accountDetails })\r\n            };\r\n    \r\n            fetch(apiUrl, requestOptions)\r\n                .then((response) => response.json())\r\n                .then((data) => console.log(data));\r\n\r\n            this.handleAccountBoard();\r\n                \r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let users = this.state.users;\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Row>\r\n                                    <Col md={6}><Card.Title as=\"h5\">Account Credentials</Card.Title></Col>\r\n                                    <Col md={6} className={'text-right'}><Button onClick={() => this.setState({ modal: true })} className={'btn-sm'} variant={'primary'}><UcFirst text={'Add User'} /></Button></Col>\r\n                                </Row>\r\n\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th>User Name</th>\r\n                                            <th>Status</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n\r\n                                        {\r\n                                            users.map((user, index) => (\r\n                                                <tr>\r\n                                                    <td>{user.name}</td>\r\n                                                    <td>{user.username}</td>\r\n                                                    <td><UcFirst text={user.status} /></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.modal}\r\n                    onHide={() => this.setState({ modal: false })}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                            Create Account\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control required type=\"text\" placeholder=\"Enter Name\" onChange={e => this.setState({name: e.target.value, nameError: false})} />\r\n                                        {\r\n                                            this.state.nameError ? (\r\n                                                <Form.Text className=\"text-danger\">\r\n                                                    Please Enter Your Name.\r\n                                                </Form.Text>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"email\" placeholder=\"Enter Email\" onChange={e => this.setState({userName: e.target.value, userNameError: false})} />\r\n                                        {\r\n                                            this.state.userNameError ? (\r\n                                            <Form.Text className=\"text-danger\">{this.state.userNameMessage}</Form.Text>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => this.setState({password: e.target.value, passwordError: false})} />\r\n                                        {\r\n                                            this.state.passwordError ? (\r\n                                                <Form.Text className=\"text-danger\">\r\n                                                    Please Enter Your Password.\r\n                                                </Form.Text>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <Form.Label>Account</Form.Label>\r\n                                        <Form.Control disabled type=\"text\" value=\"praktikum\" />\r\n                                        <Form.Label>Base URL</Form.Label>\r\n                                        <Form.Control disabled type=\"text\" value=\"https://www.praktikum.info+\" />\r\n                                    </Form.Group>\r\n                                    <Button onClick={this.handleCreateAccount} variant=\"primary\">Submit</Button>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountCredentials;","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;"],"sourceRoot":""}